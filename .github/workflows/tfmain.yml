name: 'Terraform Apply Workflow'

on:
  push:
    branches:
    - main

defaults:
  run:
    shell: bash

env:
  HAVE_AWSREGION: ${{ secrets.AWSREGION != '' }}
  HAVE_AWSROLE: ${{ secrets.AWSROLE != '' }}

jobs:
  lint:
    name: 'Terraform Linter'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        terraform-versions: [latest]
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ matrix['terraform-versions'] }}

    - name: Terraform Format
      id: fmt
      run: terraform fmt -list=true -diff -check -recursive

  check:
    name: 'Plan Pre-Checks'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        terraform-versions: [latest]
    outputs:
      status: ${{ steps.early.conclusion }}
    steps:
    - id: secret
      name: Secrets Check
      if: ${{ env.HAVE_AWSROLE != 'true' && env.HAVE_AWSREGION != 'true' }}
      run: /usr/bin/true

  apply:
    name: 'Terraform Apply'
    runs-on: ${{ matrix.os }}
    needs: check
    if: needs.check.outputs.status == 'success'
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        os: [ubuntu-latest]
        terraform-versions: [latest]
    steps:
    - name: Precondition Check
      if: ${{ env.HAVE_AWSROLE != 'true' && env.HAVE_AWSREGION != 'true' }}
      run: exit_with_success

    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws-us-gov:iam::012345678901:role/github-oidc-terraform-role
        aws-region: us-gov-west-1

    - name: Test AWS Credentials
      run: aws sts get-caller-identity

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ matrix['terraform-versions'] }}

    - name: Terraform Init
      id: init
      run: terraform init -no-color

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
    
    - name: Terraform Apply
      id: apply
      run: terraform apply -no-color -auto-approve
